name: Deploy via Issue

on:
  issues:
    types: [opened]

jobs:
  deploy:
    if: contains(github.event.issue.title, '[Terraform]')
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Extract inputs from issue
        id: extract
        run: |
          echo "Issue body: ${{ github.event.issue.body }}"
          path=$(echo "${{ github.event.issue.body }}" | grep -i 'Path to Resource' | awk -F ':' '{print $2}' | xargs)
          branch=$(echo "${{ github.event.issue.body }}" | grep -i 'Branch Name' | awk -F ':' '{print $2}' | xargs)
          echo "resource_path=$path" >> $GITHUB_OUTPUT
          echo "branch=$branch" >> $GITHUB_OUTPUT

      - name: Checkout code from branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract.outputs.branch }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::464134132245:role/githubaction
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=${{ steps.extract.outputs.resource_path }} init

      - name: Terraform Plan
        run: terraform -chdir=${{ steps.extract.outputs.resource_path }} plan

      - name: Terraform Apply
        run: terraform -chdir=${{ steps.extract.outputs.resource_path }} apply -auto-approve
      - name: Debug extracted values
        run: |
          echo "Branch: ${{ steps.extract.outputs.branch }}"
          echo "Resource Path: ${{ steps.extract.outputs.resource_path }}"
